{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","isFetched","selectedCat","category","selectedTyp","type","inrow","showAll","bind","handleCatChange","handleTypChange","handleSpecoffer","updateInRow","fetch","this","fUrl","then","response","json","jsonData","setState","fetchedData","filteredData","coup_data","catch","error","console","event","target","value","todoItems","filtersCat","fill_data","filtersTyp","maxWidth","selCat","Object","keys","map","keyName","keyIndex","selTyp","filter","coupon","includes","todo","index","className","style","src","image","url","width","height","alt","title","until","discount","description","code","href","rel","filters","onChange","checked","length","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","querySelectorAll","forEach","coupMng","ReactDOM","render","StrictMode","dataset"],"mappings":"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","file":"static/js/main.25d22711.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetched: false,\n      selectedCat: this.props.category,\n      selectedTyp: this.props.type,\n      inrow: this.props.inrow,\n    };\n    this.showAll = this.showAll.bind(this);\n    this.handleCatChange = this.handleCatChange.bind(this);\n    this.handleTypChange = this.handleTypChange.bind(this);\n    this.handleSpecoffer = this.handleSpecoffer.bind(this);\n    this.updateInRow = this.updateInRow.bind(this);\n  }\n\n  componentDidMount(){\n    fetch(this.props.fUrl)\n      .then(response => response.json())\n      .then((jsonData) => {\n        this.setState({\n          isFetched: true,\n          fetchedData: jsonData,\n          filteredData: jsonData.coup_data\n        });\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  showAll() {\n    this.setState(function(state, props) {\n      return {\n        filteredData: state.fetchedData.coup_data,\n        selectedCat: 'all',\n        selectedTyp: 'all',\n      };\n    });    \n  }\n\n  handleCatChange(event) {\n    this.setState(function(state, props) {\n      return {\n        selectedCat: event.target.value\n      };\n    });\n  }\n\n  handleTypChange(event) {\n    this.setState(function(state, props) {\n      return {\n        selectedTyp: event.target.value\n      };\n    });\n  }\n\n  handleSpecoffer(event) {\n    this.setState(function(state, props) {\n      return {\n        selectedTyp: event.target.value\n      };\n    });\n  }\n\n  updateInRow(event) {\n    this.setState(function(state, props) {\n      return {\n        inrow: event.target.value\n      };\n    });\n  }\n\n  render() {\n    let todoItems = 'Loading..';\n    if(this.state.isFetched){\n      let filteredData = this.state.filteredData;\n      const filtersCat = this.state.fetchedData.fill_data.category;\n      const filtersTyp = this.state.fetchedData.fill_data.type;\n      const maxWidth = (100 / this.state.inrow);\n      const selCat = Object.keys(filtersCat).map(function(keyName, keyIndex) {\n        return <option value={keyName} key={keyIndex}>{filtersCat[keyName]}</option>\n      });\n      \n      const selTyp = Object.keys(filtersTyp).map(function(keyName, keyIndex) {\n        return <option value={keyName} key={keyIndex}>{filtersTyp[keyName]}</option>\n      });\n\n      if( this.state.selectedCat !== 'all' ){\n        filteredData = filteredData.filter(coupon => coupon.category.includes(this.state.selectedCat));\n      }\n      if( this.state.selectedTyp !== 'all' ){\n        filteredData = filteredData.filter(coupon => coupon.type.includes(this.state.selectedTyp));\n      }\n\n      todoItems = filteredData.map((todo, index) =>\n        <div className=\"gridd__wrr\" key={index} style={{maxWidth: maxWidth + \"%\"}}>\n          <div className=\"gridd__item\">\n            <div className=\"gridd__head\">\n              <img className=\"gridd__head-logo\" src={todo.image.url} width={todo.image.width} height={todo.image.height} alt={todo.title}/> \n              <p className=\"gridd__head-until\">GÃ¼ltig bis {todo.until}</p>\n              {todo.discount &&\n                <span className=\"gridd__head-discount\">{todo.discount}</span>\n              }\n            </div> \n            <div className=\"gridd__body\">\n              <h3>{todo.title}</h3>\n              <p>{todo.description}</p>\n              <div className=\"gridd__butts\">\n                {todo.code ?\n                  <div className=\"gridd__butt gridd__butt-code\">\n                    <span>{todo.code}</span>\n                    <i className=\"fas fa-copy\"></i>\n                  </div> :\n                  <span>&nbsp;</span>\n                }\n                <a href={todo.url} className=\"gridd__butt gridd__butt-url\" rel=\"nofollow\" target=\"_blank\">\n                  ANGEBOT SEHEN\n                  <i className=\"fas fa-thumbs-up\"></i>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n   \n\n    return (\n      <div className=\"contt\">\n        {this.props.filters === 'yes' &&\n        <div className=\"contt__filterz\"> \n          <select className=\"contt__control\" value={this.state.selectedCat} onChange={this.handleCatChange}>\n            {selCat}\n          </select>\n          <select className=\"contt__control\" value={this.state.selectedTyp} onChange={this.handleTypChange}>\n            {selTyp}\n          </select>\n          <div>\n            <label className=\"contt__control contt__control-radio\">\n              <input\n                type=\"radio\"\n                value=\"blackfriday\"\n                checked={this.state.selectedTyp === 'blackfriday' ? true : false}\n                onChange={this.handleSpecoffer} />\n                <span>Black Friday</span>\n            </label>\n            <label className=\"contt__control contt__control-radio\">\n              <input\n                type=\"radio\"\n                value=\"cybermonday\"\n                checked={this.state.selectedTyp === 'cybermonday' ? true : false}\n                onChange={this.handleSpecoffer} />\n                <span>Cyber Monday</span>\n            </label>\n            <label className=\"contt__control contt__control-radio\">\n              <input\n                type=\"radio\"\n                value=\"x-mas\"\n                checked={this.state.selectedTyp === 'x-mas' ? true : false}\n                onChange={this.handleSpecoffer} />\n                <span>X-mas</span>\n            </label>\n          </div>\n          <span className=\"contt__control\"><i className=\"fas fa-tags\"></i>{todoItems.length}</span>\n          {this.state.selectedCat !== 'all' || this.state.selectedTyp !== 'all' \n            ? <button className=\"contt__control\" onClick={this.showAll}>Reset <i className=\"fas fa-backspace\"></i></button>\n            : ''\n          }\n          <label className=\"contt__control contt__control-perrow\">\n            <i className=\"fas fa-columns\"></i> :\n            <select value={this.state.inrow} onChange={this.updateInRow}>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n              <option>6</option>\n            </select>\n          </label>\n        </div>\n        }\n        <div className=\"gridd\">\n          {todoItems}\n        </div>\n      </div>\n    );\n  }\n    // Not fetched data yet\n    else{\n      return (<div>{todoItems}</div>)\n    }\n  }\n\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\ndocument.querySelectorAll('.m5-coupMng').forEach(function(coupMng) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App fUrl={coupMng.dataset.fUrl} inrow={coupMng.dataset.inrow} category={coupMng.dataset.category} type={coupMng.dataset.type} filters={coupMng.dataset.filters}/>\n    </React.StrictMode>,\n    coupMng\n  );\n});\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}