{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","isFetched","selectedCat","category","selectedTyp","type","inrow","showAll","bind","handleCatChange","handleTypChange","handleSpecoffer","updateInRow","fetch","this","fUrl","then","response","json","jsonData","setState","fetchedData","filteredData","coup_data","catch","error","console","event","target","value","todoItems","filtersCat","fill_data","filtersTyp","maxWidth","selCat","Object","keys","map","keyName","keyIndex","selTyp","filter","coupon","includes","todo","index","className","style","data-type","join","src","image","url","width","height","alt","title","until","discount","description","code","href","rel","filters","onChange","checked","length","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","querySelectorAll","forEach","coupMng","ReactDOM","render","StrictMode","dataset"],"mappings":"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","file":"static/js/main.488ea425.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n// import ImageBlack from './imgz/76580-Black-friday-background.png';\r\n\r\nclass App extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFetched: false,\r\n      selectedCat: this.props.category,\r\n      selectedTyp: this.props.type,\r\n      inrow: this.props.inrow,\r\n    };\r\n    this.showAll = this.showAll.bind(this);\r\n    this.handleCatChange = this.handleCatChange.bind(this);\r\n    this.handleTypChange = this.handleTypChange.bind(this);\r\n    this.handleSpecoffer = this.handleSpecoffer.bind(this);\r\n    this.updateInRow = this.updateInRow.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch(this.props.fUrl)\r\n      .then(response => response.json())\r\n      .then((jsonData) => {\r\n        this.setState({\r\n          isFetched: true,\r\n          fetchedData: jsonData,\r\n          filteredData: jsonData.coup_data\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error)\r\n      })\r\n  }\r\n\r\n  showAll() {\r\n    this.setState(function(state, props) {\r\n      return {\r\n        filteredData: state.fetchedData.coup_data,\r\n        selectedCat: 'all',\r\n        selectedTyp: 'all',\r\n      };\r\n    });    \r\n  }\r\n\r\n  handleCatChange(event) {\r\n    this.setState(function(state, props) {\r\n      return {\r\n        selectedCat: event.target.value\r\n      };\r\n    });\r\n  }\r\n\r\n  handleTypChange(event) {\r\n    this.setState(function(state, props) {\r\n      return {\r\n        selectedTyp: event.target.value\r\n      };\r\n    });\r\n  }\r\n\r\n  handleSpecoffer(event) {\r\n    this.setState(function(state, props) {\r\n      return {\r\n        selectedTyp: event.target.value\r\n      };\r\n    });\r\n  }\r\n\r\n  updateInRow(event) {\r\n    this.setState(function(state, props) {\r\n      return {\r\n        inrow: event.target.value\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let todoItems = 'Loading..';\r\n    if(this.state.isFetched){\r\n      let filteredData = this.state.filteredData;\r\n      const filtersCat = this.state.fetchedData.fill_data.category;\r\n      const filtersTyp = this.state.fetchedData.fill_data.type;\r\n      const maxWidth = (100 / this.state.inrow);\r\n      const selCat = Object.keys(filtersCat).map(function(keyName, keyIndex) {\r\n        return <option value={keyName} key={keyIndex}>{filtersCat[keyName]}</option>\r\n      });\r\n      \r\n      const selTyp = Object.keys(filtersTyp).map(function(keyName, keyIndex) {\r\n        return <option value={keyName} key={keyIndex}>{filtersTyp[keyName]}</option>\r\n      });\r\n\r\n      if( this.state.selectedCat !== 'all' ){\r\n        filteredData = filteredData.filter(coupon => coupon.category.includes(this.state.selectedCat));\r\n      }\r\n      if( this.state.selectedTyp !== 'all' ){\r\n        filteredData = filteredData.filter(coupon => coupon.type.includes(this.state.selectedTyp));\r\n      }\r\n\r\n      todoItems = filteredData.map((todo, index) =>\r\n        <div className=\"gridd__wrr\" key={index} style={{maxWidth: maxWidth + \"%\"}}>\r\n          <div className=\"gridd__item\" data-type={todo.type.join(' ')}>\r\n            <div className=\"gridd__head\">\r\n              <img className=\"gridd__head-logo\" src={todo.image.url} width={todo.image.width} height={todo.image.height} alt={todo.title}/> \r\n              <p className=\"gridd__head-until\">GÃ¼ltig bis {todo.until}</p>\r\n              {todo.discount &&\r\n                <span className=\"gridd__head-discount\">{todo.discount}</span>\r\n              }\r\n            </div> \r\n            <div className=\"gridd__body\">\r\n              <h3>{todo.title}</h3>\r\n              <div className=\"gridd__body-txt\">\r\n                <p>{todo.description}</p>\r\n              </div>\r\n              <div className=\"gridd__butts\">\r\n                {todo.code ?\r\n                  <div className=\"gridd__butt gridd__butt-code\">\r\n                    <span>{todo.code}</span>\r\n                    <i className=\"fas fa-copy\"></i>\r\n                  </div> :\r\n                  <span>&nbsp;</span>\r\n                }\r\n                <a href={todo.url} className=\"gridd__butt gridd__butt-url\" rel=\"nofollow\" target=\"_blank\">\r\n                  ANGEBOT SEHEN\r\n                  <i className=\"fas fa-thumbs-up\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n   \r\n\r\n    return (\r\n      <div className=\"contt\">\r\n        {this.props.filters === 'yes' &&\r\n        <div className=\"contt__filterz\"> \r\n          <select className=\"contt__control\" value={this.state.selectedCat} onChange={this.handleCatChange}>\r\n            {selCat}\r\n          </select>\r\n          <select className=\"contt__control\" value={this.state.selectedTyp} onChange={this.handleTypChange}>\r\n            {selTyp}\r\n          </select>\r\n          <div>\r\n            <label className=\"contt__control contt__control-radio\">\r\n              <input\r\n                type=\"radio\"\r\n                value=\"blackfriday\"\r\n                checked={this.state.selectedTyp === 'blackfriday' ? true : false}\r\n                onChange={this.handleSpecoffer} />\r\n                <span>Black Friday</span>\r\n            </label>\r\n            <label className=\"contt__control contt__control-radio\">\r\n              <input\r\n                type=\"radio\"\r\n                value=\"cybermonday\"\r\n                checked={this.state.selectedTyp === 'cybermonday' ? true : false}\r\n                onChange={this.handleSpecoffer} />\r\n                <span>Cyber Monday</span>\r\n            </label>\r\n            <label className=\"contt__control contt__control-radio\">\r\n              <input\r\n                type=\"radio\"\r\n                value=\"x-mas\"\r\n                checked={this.state.selectedTyp === 'x-mas' ? true : false}\r\n                onChange={this.handleSpecoffer} />\r\n                <span>X-mas</span>\r\n            </label>\r\n          </div>\r\n          <span className=\"contt__control\"><i className=\"fas fa-tags\"></i>{todoItems.length}</span>\r\n          {this.state.selectedCat !== 'all' || this.state.selectedTyp !== 'all' \r\n            ? <button className=\"contt__control\" onClick={this.showAll}>Reset <i className=\"fas fa-backspace\"></i></button>\r\n            : ''\r\n          }\r\n          <label className=\"contt__control contt__control-perrow\">\r\n            <i className=\"fas fa-columns\"></i> :\r\n            <select value={this.state.inrow} onChange={this.updateInRow}>\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n              <option>6</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n        }\r\n        <div className=\"gridd\">\r\n          {todoItems}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n    // Not fetched data yet\r\n    else{\r\n      return (<div>{todoItems}</div>)\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\ndocument.querySelectorAll('.m5-coupMng').forEach(function(coupMng) {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App fUrl={coupMng.dataset.fUrl} inrow={coupMng.dataset.inrow} category={coupMng.dataset.category} type={coupMng.dataset.type} filters={coupMng.dataset.filters}/>\r\n    </React.StrictMode>,\r\n    coupMng\r\n  );\r\n});\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}